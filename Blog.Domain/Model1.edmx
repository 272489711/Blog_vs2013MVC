<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="Model1.Store" Alias="Self" Provider="System.Data.SqlClient" ProviderManifestToken="2012" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
  <EntityContainer Name="Model1StoreContainer">
    <EntitySet Name="Blogs" EntityType="Model1.Store.Blogs" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="BlogTags" EntityType="Model1.Store.BlogTags" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="BlogTypes" EntityType="Model1.Store.BlogTypes" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="BlogComment" EntityType="Model1.Store.BlogComment" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="BlogUsers" EntityType="Model1.Store.BlogUsers" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="UserFiles" EntityType="Model1.Store.UserFiles" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="ReadInfo" EntityType="Model1.Store.ReadInfo" store:Type="Tables" Schema="dbo" />
    <EntitySet Name="BlogTagsBlogs" EntityType="Model1.Store.BlogTagsBlogs" store:Type="Tables" Schema="dbo" />
    <AssociationSet Name="FK_BlogTagsBlogs_BlogTags" Association="Model1.Store.FK_BlogTagsBlogs_BlogTags">
      <End Role="BlogTags" EntitySet="BlogTags" />
      <End Role="BlogTagsBlogs" EntitySet="BlogTagsBlogs" />
    </AssociationSet>
    <AssociationSet Name="FK_BlogTagsBlogs_Blogs" Association="Model1.Store.FK_BlogTagsBlogs_Blogs">
      <End Role="Blogs" EntitySet="Blogs" />
      <End Role="BlogTagsBlogs" EntitySet="BlogTagsBlogs" />
    </AssociationSet>
    <AssociationSet Name="BlogCommentsBlogs" Association="Model1.Store.BlogCommentsBlogs">
      <End Role="BlogComments" EntitySet="BlogComment" />
      <End Role="Blogs" EntitySet="Blogs" />
    </AssociationSet>
    <AssociationSet Name="BlogTypesBlogs" Association="Model1.Store.BlogTypesBlogs">
      <End Role="BlogTypes" EntitySet="BlogTypes" />
      <End Role="Blogs" EntitySet="Blogs" />
    </AssociationSet>
    <AssociationSet Name="BlogTagsBlogUsers" Association="Model1.Store.BlogTagsBlogUsers">
      <End Role="BlogTags" EntitySet="BlogTags" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="BlogsBlogUsers" Association="Model1.Store.BlogsBlogUsers">
      <End Role="Blogs" EntitySet="Blogs" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="BlogTypesBlogUsers" Association="Model1.Store.BlogTypesBlogUsers">
      <End Role="BlogTypes" EntitySet="BlogTypes" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="BlogCommentsBlogUsers" Association="Model1.Store.BlogCommentsBlogUsers">
      <End Role="BlogComments" EntitySet="BlogComment" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="UserFilesBlogUsers" Association="Model1.Store.UserFilesBlogUsers">
      <End Role="UserFiles" EntitySet="UserFiles" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="ReadInfoBlogUsers" Association="Model1.Store.ReadInfoBlogUsers">
      <End Role="ReadInfo" EntitySet="ReadInfo" />
      <End Role="BlogUsers" EntitySet="BlogUsers" />
    </AssociationSet>
    <AssociationSet Name="BlogsReadInfo" Association="Model1.Store.BlogsReadInfo">
      <End Role="Blogs" EntitySet="Blogs" />
      <End Role="ReadInfo" EntitySet="ReadInfo" />
    </AssociationSet>
  </EntityContainer>
  <EntityType Name="Blogs">
    <Key>
      <PropertyRef Name="BlogId" />
    </Key>
    <Property Name="BlogId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
    <Property Name="Title" Type="nvarchar(max)" Nullable="true" />
    <Property Name="Content" Type="nvarchar(max)" Nullable="true" />
    <Property Name="BlogUrl" Type="nvarchar(max)" Nullable="true" />
    <Property Name="IsForwarding" Type="bit" Nullable="true" DefaultValue="false" />
    <Property Name="BlogReadNum" Type="int" Nullable="false" DefaultValue="0" />
    <Property Name="BlogRemarks" Type="nvarchar(max)" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="IsShowHome" Type="bit" Nullable="true" />
    <Property Name="BlogTypeId" Type="int" Nullable="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
  </EntityType>
  <EntityType Name="BlogTags">
    <Key>
      <PropertyRef Name="BlogTagId" />
    </Key>
    <Property Name="BlogTagId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="BlogTagName" Type="nvarchar(max)" Nullable="false" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
    <Property Name="TagRemarks" Type="nvarchar(max)" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
  </EntityType>
  <EntityType Name="BlogTypes">
    <Key>
      <PropertyRef Name="BlogTypeId" />
    </Key>
    <Property Name="BlogTypeId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="TypeName" Type="nvarchar(max)" Nullable="true" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
    <Property Name="TypeRemarks" Type="nvarchar(max)" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
  </EntityType>
  <EntityType Name="BlogComment">
    <Key>
      <PropertyRef Name="BlogCommentId" />
    </Key>
    <Property Name="BlogCommentId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Content" Type="nvarchar(max)" Nullable="true" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="IsReply" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="ToCommentId" Type="int" Nullable="true" />
    <Property Name="ToUserId" Type="int" Nullable="true" />
    <Property Name="BlogId" Type="int" Nullable="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
  </EntityType>
  <EntityType Name="BlogUsers">
    <Key>
      <PropertyRef Name="UserId" />
    </Key>
    <Property Name="UserId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" DefaultValue="false" />
    <Property Name="UserName" Type="nvarchar(max)" Nullable="false" />
    <Property Name="UserPass" Type="nvarchar(max)" Nullable="false" />
    <Property Name="UserNickname" Type="nvarchar(max)" Nullable="true" />
    <Property Name="Portrait" Type="nvarchar(max)" Nullable="true" />
    <Property Name="Email" Type="nvarchar(max)" Nullable="true" />
    <Property Name="Phone" Type="nvarchar(max)" Nullable="true" />
    <Property Name="DefaultCSS" Type="bit" Nullable="true" />
    <Property Name="HasCSS" Type="bit" Nullable="true" />
    <Property Name="HasHTML" Type="bit" Nullable="true" />
    <Property Name="HasJS" Type="bit" Nullable="true" />
    <Property Name="Theme" Type="int" Nullable="true" />
    <Property Name="Introduction" Type="nvarchar(max)" Nullable="true" />
    <Property Name="Sex" Type="bit" Nullable="true" />
    <Property Name="Age" Type="int" Nullable="true" />
  </EntityType>
  <EntityType Name="UserFiles">
    <Key>
      <PropertyRef Name="FileId" />
    </Key>
    <Property Name="FileId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="FileName" Type="nvarchar(max)" Nullable="false" />
    <Property Name="IsImage" Type="bit" Nullable="false" />
    <Property Name="FileUrl" Type="nvarchar(max)" Nullable="false" />
    <Property Name="FileSize" Type="float" Nullable="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
  </EntityType>
  <EntityType Name="ReadInfo">
    <Key>
      <PropertyRef Name="ReadInfoId" />
    </Key>
    <Property Name="ReadInfoId" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="UserId" Type="int" Nullable="false" />
    <Property Name="BlogId" Type="int" Nullable="false" />
    <Property Name="GoodOrBad" Type="nvarchar(max)" Nullable="true" />
    <Property Name="IsDel" Type="bit" Nullable="false" />
    <Property Name="CreateTime" Type="datetime" Nullable="false" />
    <Property Name="UpTime" Type="datetime" Nullable="true" />
  </EntityType>
  <EntityType Name="BlogTagsBlogs">
    <Key>
      <PropertyRef Name="BlogTags_BlogTagId" />
      <PropertyRef Name="Blogs_BlogId" />
    </Key>
    <Property Name="BlogTags_BlogTagId" Type="int" Nullable="false" />
    <Property Name="Blogs_BlogId" Type="int" Nullable="false" />
  </EntityType>
  <Association Name="BlogCommentsBlogs">
    <End Role="BlogComments" Type="Model1.Store.BlogComment" Multiplicity="*" />
    <End Role="Blogs" Type="Model1.Store.Blogs" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="Blogs">
        <PropertyRef Name="BlogId" />
      </Principal>
      <Dependent Role="BlogComments">
        <PropertyRef Name="BlogId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogTypesBlogs">
    <End Role="BlogTypes" Type="Model1.Store.BlogTypes" Multiplicity="1" />
    <End Role="Blogs" Type="Model1.Store.Blogs" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="BlogTypes">
        <PropertyRef Name="BlogTypeId" />
      </Principal>
      <Dependent Role="Blogs">
        <PropertyRef Name="BlogTypeId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogTagsBlogUsers">
    <End Role="BlogTags" Type="Model1.Store.BlogTags" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="BlogTags">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogsBlogUsers">
    <End Role="Blogs" Type="Model1.Store.Blogs" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="Blogs">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogTypesBlogUsers">
    <End Role="BlogTypes" Type="Model1.Store.BlogTypes" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="BlogTypes">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogCommentsBlogUsers">
    <End Role="BlogComments" Type="Model1.Store.BlogComment" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="BlogComments">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="UserFilesBlogUsers">
    <End Role="UserFiles" Type="Model1.Store.UserFiles" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="UserFiles">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="ReadInfoBlogUsers">
    <End Role="ReadInfo" Type="Model1.Store.ReadInfo" Multiplicity="*" />
    <End Role="BlogUsers" Type="Model1.Store.BlogUsers" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="BlogUsers">
        <PropertyRef Name="UserId" />
      </Principal>
      <Dependent Role="ReadInfo">
        <PropertyRef Name="UserId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="BlogsReadInfo">
    <End Role="Blogs" Type="Model1.Store.Blogs" Multiplicity="1" />
    <End Role="ReadInfo" Type="Model1.Store.ReadInfo" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="Blogs">
        <PropertyRef Name="BlogId" />
      </Principal>
      <Dependent Role="ReadInfo">
        <PropertyRef Name="BlogId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="FK_BlogTagsBlogs_BlogTags">
    <End Role="BlogTags" Type="Model1.Store.BlogTags" Multiplicity="1" />
    <End Role="BlogTagsBlogs" Type="Model1.Store.BlogTagsBlogs" Multiplicity="*" />
    <ReferentialConstraint>
      <Principal Role="BlogTags">
        <PropertyRef Name="BlogTagId" />
      </Principal>
      <Dependent Role="BlogTagsBlogs">
        <PropertyRef Name="BlogTags_BlogTagId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
  <Association Name="FK_BlogTagsBlogs_Blogs">
    <End Role="BlogTagsBlogs" Type="Model1.Store.BlogTagsBlogs" Multiplicity="*" />
    <End Role="Blogs" Type="Model1.Store.Blogs" Multiplicity="1" />
    <ReferentialConstraint>
      <Principal Role="Blogs">
        <PropertyRef Name="BlogId" />
      </Principal>
      <Dependent Role="BlogTagsBlogs">
        <PropertyRef Name="Blogs_BlogId" />
      </Dependent>
    </ReferentialConstraint>
  </Association>
</Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema xmlns="http://schemas.microsoft.com/ado/2009/11/edm" xmlns:cg="http://schemas.microsoft.com/ado/2006/04/codegeneration" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" Namespace="Model1" Alias="Self" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" annotation:UseStrongSpatialTypes="false">
        <EntityContainer Name="Model1Container" annotation:LazyLoadingEnabled="true">
          <EntitySet Name="Blogs" EntityType="Model1.Blogs" />
          <EntitySet Name="BlogTags" EntityType="Model1.BlogTags" />
          <EntitySet Name="BlogTypes" EntityType="Model1.BlogTypes" />
          <EntitySet Name="BlogComment" EntityType="Model1.BlogComments" />
          <EntitySet Name="BlogUsers" EntityType="Model1.BlogUsers" />
          <AssociationSet Name="BlogTagsBlogs" Association="Model1.BlogTagsBlogs">
            <End Role="BlogTags" EntitySet="BlogTags" />
            <End Role="Blogs" EntitySet="Blogs" />
          </AssociationSet>
          <AssociationSet Name="BlogCommentsBlogs" Association="Model1.BlogCommentsBlogs">
            <End Role="BlogComments" EntitySet="BlogComment" />
            <End Role="Blogs" EntitySet="Blogs" />
          </AssociationSet>
          <AssociationSet Name="BlogTypesBlogs" Association="Model1.BlogTypesBlogs">
            <End Role="BlogTypes" EntitySet="BlogTypes" />
            <End Role="Blogs" EntitySet="Blogs" />
          </AssociationSet>
          <AssociationSet Name="BlogTagsBlogUsers" Association="Model1.BlogTagsBlogUsers">
            <End Role="BlogTags" EntitySet="BlogTags" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <AssociationSet Name="BlogsBlogUsers" Association="Model1.BlogsBlogUsers">
            <End Role="Blogs" EntitySet="Blogs" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <AssociationSet Name="BlogTypesBlogUsers" Association="Model1.BlogTypesBlogUsers">
            <End Role="BlogTypes" EntitySet="BlogTypes" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <AssociationSet Name="BlogCommentsBlogUsers" Association="Model1.BlogCommentsBlogUsers">
            <End Role="BlogComments" EntitySet="BlogComment" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <EntitySet Name="UserFiles" EntityType="Model1.UserFiles" />
          <AssociationSet Name="UserFilesBlogUsers" Association="Model1.UserFilesBlogUsers">
            <End Role="UserFiles" EntitySet="UserFiles" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <EntitySet Name="ReadInfo" EntityType="Model1.ReadInfo" />
          <AssociationSet Name="ReadInfoBlogUsers" Association="Model1.ReadInfoBlogUsers">
            <End Role="ReadInfo" EntitySet="ReadInfo" />
            <End Role="BlogUsers" EntitySet="BlogUsers" />
          </AssociationSet>
          <AssociationSet Name="BlogsReadInfo" Association="Model1.BlogsReadInfo">
            <End Role="Blogs" EntitySet="Blogs" />
            <End Role="ReadInfo" EntitySet="ReadInfo" />
          </AssociationSet>
        </EntityContainer>
        <EntityType Name="Blogs">
          <Key>
            <PropertyRef Name="BlogId" />
          </Key>
          <Property Name="BlogId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="CreateTime" Type="DateTime" Nullable="false" Precision="3" />
          <Property Name="UpTime" Type="DateTime" Precision="3" />
          <Property Name="Title" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="Content" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="BlogUrl" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IsForwarding" Type="Boolean" DefaultValue="False" />
          <Property Name="BlogReadNum" Type="Int32" Nullable="false" DefaultValue="0" />
          <Property Name="BlogRemarks" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IsDel" Type="Boolean" Nullable="false" DefaultValue="false" />
          <NavigationProperty Name="BlogTags" Relationship="Model1.BlogTagsBlogs" FromRole="Blogs" ToRole="BlogTags" />
          <Property Name="IsShowHome" Type="Boolean" />
          <NavigationProperty Name="BlogComments" Relationship="Model1.BlogCommentsBlogs" FromRole="Blogs" ToRole="BlogComments" />
          <NavigationProperty Name="BlogTypes" Relationship="Model1.BlogTypesBlogs" FromRole="Blogs" ToRole="BlogTypes" />
          <Property Name="BlogTypeId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.BlogsBlogUsers" FromRole="Blogs" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="ReadInfo" Relationship="Model1.BlogsReadInfo" FromRole="Blogs" ToRole="ReadInfo" />
        </EntityType>
        <EntityType Name="BlogTags">
          <Key>
            <PropertyRef Name="BlogTagId" />
          </Key>
          <Property Name="BlogTagId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="BlogTagName" Type="String" Nullable="false" />
          <Property Name="CreateTime" Type="DateTime" Precision="3" Nullable="false" />
          <Property Name="UpTime" Type="DateTime" Precision="3" />
          <Property Name="TagRemarks" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IsDel" Type="Boolean" Nullable="false" DefaultValue="false" />
          <NavigationProperty Name="Blogs" Relationship="Model1.BlogTagsBlogs" FromRole="BlogTags" ToRole="Blogs" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.BlogTagsBlogUsers" FromRole="BlogTags" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="BlogTypes">
          <Key>
            <PropertyRef Name="BlogTypeId" />
          </Key>
          <Property Name="BlogTypeId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="TypeName" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="CreateTime" Type="DateTime" Precision="3" Nullable="false" />
          <Property Name="UpTime" Type="DateTime" Precision="3" />
          <Property Name="TypeRemarks" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="IsDel" Type="Boolean" Nullable="false" DefaultValue="false" />
          <NavigationProperty Name="Blogs" Relationship="Model1.BlogTypesBlogs" FromRole="BlogTypes" ToRole="Blogs" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.BlogTypesBlogUsers" FromRole="BlogTypes" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="BlogComments">
          <Key>
            <PropertyRef Name="BlogCommentId" />
          </Key>
          <Property Name="BlogCommentId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="Content" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="CreateTime" Type="DateTime" Precision="3" Nullable="false" />
          <Property Name="UpTime" Type="DateTime" Precision="3" />
          <Property Name="IsDel" Type="Boolean" Nullable="false" DefaultValue="false" />
          <Property Name="IsReply" Type="Boolean" Nullable="false" DefaultValue="false" />
          <Property Name="ToCommentId" Type="Int32" Nullable="true" />
          <Property Name="ToUserId" Type="Int32" Nullable="true" />
          <NavigationProperty Name="Blogs" Relationship="Model1.BlogCommentsBlogs" FromRole="BlogComments" ToRole="Blogs" />
          <Property Name="BlogId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.BlogCommentsBlogUsers" FromRole="BlogComments" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="BlogUsers">
          <Key>
            <PropertyRef Name="UserId" />
          </Key>
          <Property Name="UserId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="CreateTime" Type="DateTime" Precision="3" Nullable="false" />
          <Property Name="UpTime" Type="DateTime" Precision="3" />
          <Property Name="IsDel" Type="Boolean" Nullable="false" DefaultValue="false" />
          <Property Name="UserName" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="UserPass" Type="String" Nullable="false" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="UserNickname" Type="String" Nullable="true" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="Portrait" Type="String" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="Email" Type="String" Nullable="true" MaxLength="Max" Unicode="true" FixedLength="false" />
          <Property Name="Phone" Type="String" Nullable="true" MaxLength="Max" Unicode="true" FixedLength="false" />
          <NavigationProperty Name="BlogTags" Relationship="Model1.BlogTagsBlogUsers" FromRole="BlogUsers" ToRole="BlogTags" />
          <NavigationProperty Name="Blogs" Relationship="Model1.BlogsBlogUsers" FromRole="BlogUsers" ToRole="Blogs" />
          <NavigationProperty Name="BlogTypes" Relationship="Model1.BlogTypesBlogUsers" FromRole="BlogUsers" ToRole="BlogTypes" />
          <NavigationProperty Name="BlogComments" Relationship="Model1.BlogCommentsBlogUsers" FromRole="BlogUsers" ToRole="BlogComments" />
          <NavigationProperty Name="UserFiles" Relationship="Model1.UserFilesBlogUsers" FromRole="BlogUsers" ToRole="UserFiles" />
          <NavigationProperty Name="ReadInfo" Relationship="Model1.ReadInfoBlogUsers" FromRole="BlogUsers" ToRole="ReadInfo" />
          <Property Name="DefaultCSS" Type="Boolean" />
          <Property Name="HasCSS" Type="Boolean" />
          <Property Name="HasHTML" Type="Boolean" />
          <Property Name="HasJS" Type="Boolean" />
          <Property Name="Theme" Type="Int32" />
          <Property Name="Introduction" Type="String" />
          <Property Name="Sex" Type="Boolean" />
          <Property Name="Age" Type="Int32" />
        </EntityType>
        <Association Name="BlogTagsBlogs">
          <End Type="Model1.BlogTags" Role="BlogTags" Multiplicity="*" />
          <End Type="Model1.Blogs" Role="Blogs" Multiplicity="*" />
        </Association>
        <Association Name="BlogCommentsBlogs">
          <End Type="Model1.BlogComments" Role="BlogComments" Multiplicity="*" />
          <End Type="Model1.Blogs" Role="Blogs" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="Blogs">
              <PropertyRef Name="BlogId" />
            </Principal>
            <Dependent Role="BlogComments">
              <PropertyRef Name="BlogId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogTypesBlogs">
          <End Type="Model1.BlogTypes" Role="BlogTypes" Multiplicity="1" />
          <End Type="Model1.Blogs" Role="Blogs" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="BlogTypes">
              <PropertyRef Name="BlogTypeId" />
            </Principal>
            <Dependent Role="Blogs">
              <PropertyRef Name="BlogTypeId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogTagsBlogUsers">
          <End Type="Model1.BlogTags" Role="BlogTags" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="BlogTags">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogsBlogUsers">
          <End Type="Model1.Blogs" Role="Blogs" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="Blogs">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogTypesBlogUsers">
          <End Type="Model1.BlogTypes" Role="BlogTypes" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="BlogTypes">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogCommentsBlogUsers">
          <End Type="Model1.BlogComments" Role="BlogComments" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="BlogComments">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <EntityType Name="UserFiles">
          <Key>
            <PropertyRef Name="FileId" />
          </Key>
          <Property Name="FileId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <Property Name="FileName" Type="String" Nullable="false" />
          <Property Name="IsImage" Type="Boolean" Nullable="false" />
          <Property Name="FileUrl" Type="String" Nullable="false" />
          <Property Name="FileSize" Type="Double" Nullable="false" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.UserFilesBlogUsers" FromRole="UserFiles" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
        </EntityType>
        <Association Name="UserFilesBlogUsers">
          <End Type="Model1.UserFiles" Role="UserFiles" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="UserFiles">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <EntityType Name="ReadInfo">
          <Key>
            <PropertyRef Name="ReadInfoId" />
          </Key>
          <Property Name="ReadInfoId" Type="Int32" Nullable="false" annotation:StoreGeneratedPattern="Identity" />
          <NavigationProperty Name="BlogUsers" Relationship="Model1.ReadInfoBlogUsers" FromRole="ReadInfo" ToRole="BlogUsers" />
          <Property Name="UserId" Type="Int32" Nullable="false" />
          <NavigationProperty Name="Blogs" Relationship="Model1.BlogsReadInfo" FromRole="ReadInfo" ToRole="Blogs" />
          <Property Name="BlogId" Type="Int32" Nullable="false" />
          <Property Name="GoodOrBad" Type="String" >
            <Documentation>
              <LongDescription>读者对该博文是踩还是赞</LongDescription>
            </Documentation>
          </Property>
          <Property Name="IsDel" Type="Boolean" Nullable="false" />
          <Property Name="CreateTime" Type="DateTime" Nullable="false" />
          <Property Name="UpTime" Type="DateTime" />
        </EntityType>
        <Association Name="ReadInfoBlogUsers">
          <End Type="Model1.ReadInfo" Role="ReadInfo" Multiplicity="*" />
          <End Type="Model1.BlogUsers" Role="BlogUsers" Multiplicity="1" />
          <ReferentialConstraint>
            <Principal Role="BlogUsers">
              <PropertyRef Name="UserId" />
            </Principal>
            <Dependent Role="ReadInfo">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="BlogsReadInfo">
          <End Type="Model1.Blogs" Role="Blogs" Multiplicity="1" />
          <End Type="Model1.ReadInfo" Role="ReadInfo" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Blogs">
              <PropertyRef Name="BlogId" />
            </Principal>
            <Dependent Role="ReadInfo">
              <PropertyRef Name="BlogId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
    <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
  <EntityContainerMapping StorageEntityContainer="Model1StoreContainer" CdmEntityContainer="Model1Container">
    <EntitySetMapping Name="Blogs">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.Blogs)">
        <MappingFragment StoreEntitySet="Blogs">
          <ScalarProperty Name="BlogId" ColumnName="BlogId" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
          <ScalarProperty Name="Title" ColumnName="Title" />
          <ScalarProperty Name="Content" ColumnName="Content" />
          <ScalarProperty Name="BlogUrl" ColumnName="BlogUrl" />
          <ScalarProperty Name="IsForwarding" ColumnName="IsForwarding" />
          <ScalarProperty Name="BlogReadNum" ColumnName="BlogReadNum" />
          <ScalarProperty Name="BlogRemarks" ColumnName="BlogRemarks" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="IsShowHome" ColumnName="IsShowHome" />
          <ScalarProperty Name="BlogTypeId" ColumnName="BlogTypeId" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="BlogTags">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.BlogTags)">
        <MappingFragment StoreEntitySet="BlogTags">
          <ScalarProperty Name="BlogTagId" ColumnName="BlogTagId" />
          <ScalarProperty Name="BlogTagName" ColumnName="BlogTagName" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
          <ScalarProperty Name="TagRemarks" ColumnName="TagRemarks" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="BlogTypes">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.BlogTypes)">
        <MappingFragment StoreEntitySet="BlogTypes">
          <ScalarProperty Name="BlogTypeId" ColumnName="BlogTypeId" />
          <ScalarProperty Name="TypeName" ColumnName="TypeName" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
          <ScalarProperty Name="TypeRemarks" ColumnName="TypeRemarks" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="BlogComment">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.BlogComments)">
        <MappingFragment StoreEntitySet="BlogComment">
          <ScalarProperty Name="BlogCommentId" ColumnName="BlogCommentId" />
          <ScalarProperty Name="Content" ColumnName="Content" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="IsReply" ColumnName="IsReply" />
          <ScalarProperty Name="ToCommentId" ColumnName="ToCommentId" />
          <ScalarProperty Name="ToUserId" ColumnName="ToUserId" />
          <ScalarProperty Name="BlogId" ColumnName="BlogId" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="BlogUsers">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.BlogUsers)">
        <MappingFragment StoreEntitySet="BlogUsers">
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="UserName" ColumnName="UserName" />
          <ScalarProperty Name="UserPass" ColumnName="UserPass" />
          <ScalarProperty Name="UserNickname" ColumnName="UserNickname" />
          <ScalarProperty Name="Portrait" ColumnName="Portrait" />
          <ScalarProperty Name="Email" ColumnName="Email" />
          <ScalarProperty Name="Phone" ColumnName="Phone" />
          <ScalarProperty Name="DefaultCSS" ColumnName="DefaultCSS" />
          <ScalarProperty Name="HasCSS" ColumnName="HasCSS" />
          <ScalarProperty Name="HasHTML" ColumnName="HasHTML" />
          <ScalarProperty Name="HasJS" ColumnName="HasJS" />
          <ScalarProperty Name="Theme" ColumnName="Theme" />
          <ScalarProperty Name="Introduction" ColumnName="Introduction" />
          <ScalarProperty Name="Sex" ColumnName="Sex" />
          <ScalarProperty Name="Age" ColumnName="Age" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="UserFiles">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.UserFiles)">
        <MappingFragment StoreEntitySet="UserFiles">
          <ScalarProperty Name="FileId" ColumnName="FileId" />
          <ScalarProperty Name="FileName" ColumnName="FileName" />
          <ScalarProperty Name="IsImage" ColumnName="IsImage" />
          <ScalarProperty Name="FileUrl" ColumnName="FileUrl" />
          <ScalarProperty Name="FileSize" ColumnName="FileSize" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="ReadInfo">
      <EntityTypeMapping TypeName="IsTypeOf(Model1.ReadInfo)">
        <MappingFragment StoreEntitySet="ReadInfo">
          <ScalarProperty Name="ReadInfoId" ColumnName="ReadInfoId" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="BlogId" ColumnName="BlogId" />
          <ScalarProperty Name="GoodOrBad" ColumnName="GoodOrBad" />
          <ScalarProperty Name="IsDel" ColumnName="IsDel" />
          <ScalarProperty Name="CreateTime" ColumnName="CreateTime" />
          <ScalarProperty Name="UpTime" ColumnName="UpTime" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <AssociationSetMapping Name="BlogTagsBlogs" TypeName="Model1.BlogTagsBlogs" StoreEntitySet="BlogTagsBlogs">
      <EndProperty Name="BlogTags">
        <ScalarProperty Name="BlogTagId" ColumnName="BlogTags_BlogTagId" />
      </EndProperty>
      <EndProperty Name="Blogs">
        <ScalarProperty Name="BlogId" ColumnName="Blogs_BlogId" />
      </EndProperty>
    </AssociationSetMapping>
  </EntityContainerMapping>
</Mapping></edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <edmx:Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <edmx:Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </edmx:Connection>
    <edmx:Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="False" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="无" />
        <DesignerProperty Name="UseLegacyProvider" Value="False" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="False" />
      </DesignerInfoPropertySet>
    </edmx:Options>
    <!-- Diagram content (shape and connector positions) -->
    <edmx:Diagrams>
    </edmx:Diagrams>
  </edmx:Designer>
</edmx:Edmx>
